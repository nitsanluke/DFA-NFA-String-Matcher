package finiteautomata;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * stringMatcher.java
 *
 * Created on Oct 31, 2010, 12:40:41 PM
 */
/**
 *
 * @author Nitish
 */
public class stringMatcher extends javax.swing.JFrame {

    /** Creates new form stringMatcher */
    static Object data[][];
    static String initialState, finalState;
    static char[] inputSymbols;
    // String[][] graph;
    static char[] input;
    JFrame frame;

    public stringMatcher() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(finiteautomata.FiniteAutomataApp.class).getContext().getResourceMap(stringMatcher.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        jMenuBar1.setName("String Matcher"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(331, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        // char initialS[] = this.initialState.toCharArray();
        stringMatcher.input = new char[jTextField1.getText().toCharArray().length];
        System.arraycopy(jTextField1.getText().toCharArray(), 0, stringMatcher.input, 0, jTextField1.getText().toCharArray().length);
        // System.out.println(jTextField1.getText());
        // System.out.println("tttt" + this.finalState.charAt(1));
        String[] finalS = stringMatcher.finalState.toString().split(",");

        //  System.arraycopy(stringMatcher.finalState.toCharArray(), 0, finalS, 0, stringMatcher.finalState.toCharArray().length);

        int current = Integer.parseInt(String.valueOf(stringMatcher.initialState.charAt(1)));

        Object currentState;
        currentState = null;

//int current = (int) '2';



        for (int i = 0; i < stringMatcher.input.length; i++) {
            //System.out.println(this.inputSymbols[i]);
            for (int j = 0; j < stringMatcher.inputSymbols.length; j++) {

                if (stringMatcher.input[i] == stringMatcher.inputSymbols[j]) {
                    //System.out.println(this.input[i]+"  ==  "+ stringMatcher.inputSymbols[j]);

                    // System.out.println("Before "+this.data[current][j+1]);
                    currentState = stringMatcher.data[current][j + 1];

                    current = Integer.parseInt(String.valueOf(currentState.toString().charAt(1)));
                    //System.out.println("current  "+current);
                    // System.out.println("After "+this.data[current][j+1]);
                }
                // System.out.println("J "+j);
            }
//System.out.println("I "+i);

        }

        if (currentState != null) {
            int k;
            for (k = 0; k < finalS.length; k++) {

                if (currentState.toString().equalsIgnoreCase(finalS[k])) {

                    JOptionPane.showMessageDialog(frame, "String Accepted", "Message", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }
            if (k >= finalS.length) {
                JOptionPane.showMessageDialog(frame, "String Not Acepted", "Message", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(frame, "String Not Acepted", "Message", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        // char initialS[] = this.initialState.toCharArray();
        stringMatcher.input = new char[jTextField1.getText().toCharArray().length];
        System.arraycopy(jTextField1.getText().toCharArray(), 0, stringMatcher.input, 0, jTextField1.getText().toCharArray().length);
        // System.out.println(jTextField1.getText());
        // System.out.println("tttt" + this.finalState.charAt(1));
        String[] finalS = stringMatcher.finalState.toString().split(",");

        //  System.arraycopy(stringMatcher.finalState.toCharArray(), 0, finalS, 0, stringMatcher.finalState.toCharArray().length);

        int current = Integer.parseInt(String.valueOf(stringMatcher.initialState.charAt(1)));

        Object currentState;
        currentState = null;

//int current = (int) '2';



        for (int i = 0; i < stringMatcher.input.length; i++) {
            //System.out.println(this.inputSymbols[i]);
            for (int j = 0; j < stringMatcher.inputSymbols.length; j++) {

                if (stringMatcher.input[i] == stringMatcher.inputSymbols[j]) {
                    // System.out.println(this.input[i]+"  ==  "+ stringMatcher.inputSymbols[j]);

                    // System.out.println("Before "+this.data[current][j+1]);
                    currentState = stringMatcher.data[current][j + 1];

                    current = Integer.parseInt(String.valueOf(currentState.toString().charAt(1)));
                    // System.out.println("current  "+current);
                    //System.out.println("After "+this.data[current][j+1]);
                }
                // System.out.println("J "+j);
            }
//System.out.println("I "+i);

        }
        if (currentState != null) {
            int k;
            for (k = 0; k < finalS.length; k++) {

                if (currentState.toString().equalsIgnoreCase(finalS[k])) {

                    JOptionPane.showMessageDialog(frame, "String Accepted", "Message", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }
            if (k >= finalS.length) {
                JOptionPane.showMessageDialog(frame, "String Not Acepted", "Message", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(frame, "String Not Acepted", "Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1KeyPressed

    /**
     * @param args the command line arguments
     */
    public void sendGraph(Object data[][], String initialState, String finalState, String inputSymbols) {

        this.inputSymbols = new char[inputSymbols.toCharArray().length];
        this.data = new Object[data.length][data[0].length];
        //this.graph = new String[data.length][data.length];

        System.arraycopy(data, 0, this.data, 0, data.length);

        this.initialState = initialState;
        this.finalState = finalState;

        System.arraycopy(inputSymbols.toCharArray(), 0, this.inputSymbols, 0, inputSymbols.toCharArray().length);



    }

    // public static void main(String [] arg) {
    public void check() {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new stringMatcher().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
